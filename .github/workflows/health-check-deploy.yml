name: Deploy Health Check Lambda

on:
  push:
    branches: [main, dev]
    paths:
      - 'infrastructure/monitoring/lambda/**'
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy-lambda:
    name: Deploy Health Check Lambda
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: infrastructure/monitoring/lambda/src/package.json
          
      - name: Install dependencies
        run: |
          cd infrastructure/monitoring/lambda/src
          npm ci
          
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          
      - name: Determine environment
        id: environment
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=dev" >> $GITHUB_OUTPUT
          fi
          
      - name: Initialize Terraform
        run: |
          cd infrastructure/monitoring
          terraform init -backend-config="key=culinary-canvas-${{ steps.environment.outputs.env }}/monitoring/terraform.tfstate"
          
      - name: Terraform Plan
        run: |
          cd infrastructure/monitoring
          terraform plan -var-file="environments/${{ steps.environment.outputs.env }}.tfvars" -out=tfplan
          
      - name: Terraform Apply
        run: |
          cd infrastructure/monitoring
          terraform apply -auto-approve tfplan
          
      - name: Notify Deployment Status
        if: always()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: ${{ job.status }}
          SLACK_TITLE: "Health Check Lambda Deployment (${{ steps.environment.outputs.env }})"
          SLACK_MESSAGE: "Deployment ${{ job.status == 'success' && 'succeeded! :rocket:' || 'failed! :warning:' }}"
          SLACK_FOOTER: "Culinary Canvas DevOps" 